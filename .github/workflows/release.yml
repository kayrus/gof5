name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
      commit:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, macos-13]
    steps:
      - uses: actions/checkout@v4
        if: github.event.inputs.commit != ''
        with:
          # checkout the commit if provided
          ref: ${{ github.event.inputs.commit }}
          # unshallow the repository to ensure all tags are available
          fetch-depth: 0

      - uses: actions/checkout@v4
        if: github.event.inputs.commit == ''
        with:
          # checkout the tag if provided, otherwise checkout the current ref
          ref: ${{ github.event.inputs.tag != '' && format('refs/tags/{0}', github.event.inputs.tag) || github.ref }}

      # workaround for Pro feature https://goreleaser.com/customization/nightlies/
      # create a dirty tag if the commit is not tagged
      - name: Get dirty git tag
        id: dirty_tag
        if: github.event.inputs.commit != ''
        shell: bash
        run: echo "tag=$(git tag --points-at HEAD | grep -q . || git describe --tags --always --abbrev=8 --dirty)" >> "$GITHUB_OUTPUT"
      - name: Set dirty git tag
        if: steps.dirty_tag.outputs.tag != ''
        run: git tag ${{ steps.dirty_tag.outputs.tag }}

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Setup yq
        if: runner.os == 'Windows'
        uses: dcarbone/install-yq-action@v1

      # workaround for Pro feature https://goreleaser.com/customization/prebuilt/
      # and the inability to run `goreleaser release --id ${matrix.os}`
      - name: Copy goreleaser config to temp location
        run: cp .goreleaser.yml ${{ runner.temp }}/.goreleaser.yml
      # remove all builds except the one for the current OS
      - name: Override builds in copied config
        run: yq${{ runner.os == 'Windows' && '.exe' || '' }} -i eval '.builds |= map(select(.id == "${{ matrix.os }}"))' ${{ runner.temp }}/.goreleaser.yml

      - uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --config ${{ runner.temp }}/.goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
